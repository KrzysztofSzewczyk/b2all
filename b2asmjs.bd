

[general]
indent=true
starting=3

[header]
content=<<EOT
/* asm.js code generated by b2asmjs from b2any toolkit.   */
/* Header code - Copyright (C) 2019 by Kamila Szewczyk */
/* The original brianfuck code belongs to it's author.    */
/* Have fun!                        ~~ Palaiologos/MENACE */

(function (ctx) {
    function brainfuck(stdlib, ffi, heap) {
        'use asm';
        var m = new stdlib.Uint8Array(heap);
        var p = 0;
        var put = ffi.put;
        var get = ffi.get;
        function run() {
EOT

[footer]
content=<<EOT
        }
        function reset() {
            var i = 0;
            while ((i|0) < (65536|0)) {
                m[i] = 0;
                i = (i + 1)|0
            }
        }
        return { reset: reset, run: run };
    }
    ctx['brainfuck'] = brainfuck(ctx, {
        put: function (i) { document.getElementById('output').innerHTML += String.fromCharCode(i); },
        get: function () { var c = document.getElementById('input').value.charCodeAt(inputPtr) || 0;inputPtr++;return c; }
    }, new ArrayBuffer(65536));
})(this)

EOT

unbal=<<EOT
/* NOTE: This code will NOT run. Brackets are unbalanced */
EOT

[instructions]
plus=m[p] = ((m[p] | 0) + $N);
minus=m[p] = ((m[p] | 0) - $N);
left=p = (p - $N) | 0;
right=p = (p + $N) | 0;
input=m[p] = get() | 0;
output=put(m[p] | 0);
lbra=while ((m[p] | 0) > 0) {
rbra=}
